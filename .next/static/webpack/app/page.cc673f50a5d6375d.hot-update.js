"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/api.ts":
/*!**************************!*\
  !*** ./src/utils/api.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseStreamingResponse: function() { return /* binding */ parseStreamingResponse; },\n/* harmony export */   sendMessageToWeatherAgent: function() { return /* binding */ sendMessageToWeatherAgent; }\n/* harmony export */ });\nconst API_BASE_URL = \"https://millions-screaming-vulture.mastra.cloud/api/agents/weatherAgent\";\nconst sendMessageToWeatherAgent = async function(messages) {\n    let threadId = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"YOUR_COLLEGE_ROLL_NUMBER\";\n    const requestBody = {\n        messages,\n        runId: \"weatherAgent\",\n        maxRetries: 2,\n        maxSteps: 5,\n        temperature: 0.5,\n        topP: 1,\n        runtimeContext: {},\n        threadId,\n        resourceId: \"weatherAgent\"\n    };\n    console.log(\"Sending request to:\", API_BASE_URL);\n    console.log(\"Request payload:\", JSON.stringify(requestBody, null, 2));\n    const response = await fetch(API_BASE_URL, {\n        method: \"POST\",\n        headers: {\n            \"Accept\": \"*/*\",\n            \"Accept-Language\": \"en-GB,en-US;q=0.9,en;q=0.8,fr;q=0.7\",\n            \"Connection\": \"keep-alive\",\n            \"Content-Type\": \"application/json\",\n            \"x-mastra-dev-playground\": \"true\"\n        },\n        body: JSON.stringify(requestBody)\n    });\n    console.log(\"Response status:\", response.status);\n    console.log(\"Response headers:\", Object.fromEntries(response.headers.entries()));\n    if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Error response:\", errorText);\n        throw new Error(\"HTTP error! status: \".concat(response.status, \", message: \").concat(errorText));\n    }\n    if (!response.body) {\n        throw new Error(\"No response body\");\n    }\n    return response.body;\n};\nconst parseStreamingResponse = async (stream, onMessage, onFinish, onError)=>{\n    const reader = stream.getReader();\n    const decoder = new TextDecoder();\n    try {\n        while(true){\n            const { done, value } = await reader.read();\n            if (done) {\n                onFinish();\n                break;\n            }\n            const chunk = decoder.decode(value, {\n                stream: true\n            });\n            const lines = chunk.split(\"\\n\");\n            for (const line of lines){\n                if (line.trim() === \"\") continue;\n                try {\n                    // Handle different response formats based on the API response structure\n                    if (line.startsWith(\"f:\")) {\n                        // Handle messageId format\n                        const messageData = line.substring(2);\n                        const parsed = JSON.parse(messageData);\n                        if (parsed.messageId) {\n                            continue; // Skip messageId lines\n                        }\n                    } else if (line.startsWith(\"0:\")) {\n                        // Handle content chunks\n                        const content = line.substring(2).replace(/\"/g, \"\");\n                        if (content.trim()) {\n                            onMessage(content);\n                        }\n                    } else if (line.startsWith(\"e:\")) {\n                        // Handle finish event\n                        const finishData = line.substring(2);\n                        const parsed = JSON.parse(finishData);\n                        if (parsed.finishReason === \"stop\") {\n                            onFinish();\n                            return;\n                        }\n                    } else if (line.startsWith(\"d:\")) {\n                        // Handle final data\n                        onFinish();\n                        return;\n                    }\n                } catch (parseError) {\n                    console.warn(\"Failed to parse line:\", line, parseError);\n                }\n            }\n        }\n    } catch (error) {\n        onError(error instanceof Error ? error.message : \"Unknown error occurred\");\n    } finally{\n        reader.releaseLock();\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/api.ts\n"));

/***/ })

});